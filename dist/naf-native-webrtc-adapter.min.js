!function(e){function t(o){if(n[o])return n[o].exports;var i=n[o]={i:o,l:!1,exports:{}};return e[o].call(i.exports,i,i.exports,t),i.l=!0,i.exports}var n={};t.m=e,t.c=n,t.d=function(e,n,o){t.o(e,n)||Object.defineProperty(e,n,{enumerable:!0,get:o})},t.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},t.t=function(e,n){if(1&n&&(e=t(e)),8&n)return e;if(4&n&&"object"==typeof e&&e&&e.__esModule)return e;var o=Object.create(null);if(t.r(o),Object.defineProperty(o,"default",{enumerable:!0,value:e}),2&n&&"string"!=typeof e)for(var i in e)t.d(o,i,function(t){return e[t]}.bind(null,i));return o},t.n=function(e){var n=e&&e.__esModule?function(){return e.default}:function(){return e};return t.d(n,"a",n),n},t.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},t.p="",t(t.s=0)}([function(e,t,n){"use strict";var o=function(){function e(e,t){for(var n,o=0;o<t.length;o++)(n=t[o]).enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}return function(t,n,o){return n&&e(t.prototype,n),o&&e(t,o),t}}(),i=n(1),r=function(){function e(){(function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")})(this,e),void 0===io&&console.warn("It looks like socket.io has not been loaded before NativeWebRtcAdapter. Please do that."),this.app="default",this.room="default",this.occupantListener=null,this.myRoomJoinTime=null,this.myId=null,this.avgTimeOffset=0,this.peers={},this.occupants={},this.audioStreams={},this.pendingAudioRequest={},this.serverTimeRequests=0,this.timeOffsets=[],this.avgTimeOffset=0}return o(e,[{key:"setServerUrl",value:function(e){this.wsUrl=e}},{key:"setApp",value:function(e){this.app=e}},{key:"setRoom",value:function(e){this.room=e}},{key:"setWebRtcOptions",value:function(e){!1===e.datachannel&&NAF.log.error("NativeWebRtcAdapter.setWebRtcOptions: datachannel must be true."),!0===e.audio&&(this.sendAudio=!0),!0===e.video&&NAF.log.warn("NativeWebRtcAdapter does not support video yet.")}},{key:"setServerConnectListeners",value:function(e,t){this.connectSuccess=e,this.connectFailure=t}},{key:"setRoomOccupantListener",value:function(e){this.occupantListener=e}},{key:"setDataChannelListeners",value:function(e,t,n){this.openListener=e,this.closedListener=t,this.messageListener=n}},{key:"connect",value:function(){var e=this;this.updateTimeOffset().then((function(){function t(t){var n=t.from,o=t.type,i=t.data;return"ice-candidate"===o?void e.peers[n].handleSignal(i):void e.messageListener(n,o,i)}e.wsUrl&&"/"!==e.wsUrl||("https:"===location.protocol?e.wsUrl="wss://"+location.host:e.wsUrl="ws://"+location.host),NAF.log.write("Attempting to connect to socket.io");var n=e.socket=io(e.wsUrl);n.on("connect",(function(){NAF.log.write("User connected",n.id),e.myId=n.id,e.joinRoom()})),n.on("connectSuccess",(function(t){var n=t.joinedTime;e.myRoomJoinTime=n,NAF.log.write("Successfully joined room",e.room,"at server time",n),e.sendAudio?navigator.mediaDevices.getUserMedia({audio:!0,video:!1}).then((function(t){e.storeAudioStream(e.myId,t),e.connectSuccess(e.myId)})).catch((function(e){return NAF.log.error(e)})):e.connectSuccess(e.myId)})),n.on("error",(function(t){console.error("Socket connection failure",t),e.connectFailure()})),n.on("occupantsChanged",(function(t){var n=t.occupants;NAF.log.write("occupants changed",t),e.receivedOccupants(n)})),n.on("send",t),n.on("broadcast",t)}))}},{key:"joinRoom",value:function(){NAF.log.write("Joining room",this.room),this.socket.emit("joinRoom",{room:this.room})}},{key:"receivedOccupants",value:function(e){var t=this;delete e[this.myId],this.occupants=e,NAF.log.write("occupants=",e);var n=this,o=this.myId,r=function(){var e=s;if(t.peers[e])return"continue";var r=new i(o,e,(function(t){n.socket.emit("send",{from:o,to:e,type:"ice-candidate",data:t,sending:!0})}));r.setDatachannelListeners(n.openListener,n.closedListener,n.messageListener,n.trackListener.bind(n)),n.peers[e]=r};for(var s in e)r();this.occupantListener(e)}},{key:"shouldStartConnectionTo",value:function(e){return(this.myRoomJoinTime||0)<=(e||0)}},{key:"startStreamConnection",value:function(e){var t=this;NAF.log.write("starting offer process"),this.sendAudio?this.getMediaStream(this.myId).then((function(n){t.peers[e].offer({sendAudio:!0,localAudioStream:n})})):this.peers[e].offer({})}},{key:"closeStreamConnection",value:function(e){NAF.log.write("closeStreamConnection",e,this.peers),this.peers[e].close(),delete this.peers[e],delete this.occupants[e],this.closedListener(e)}},{key:"getConnectStatus",value:function(e){var t=this.peers[e];if(void 0===t)return NAF.adapters.NOT_CONNECTED;switch(t.getStatus()){case i.IS_CONNECTED:return NAF.adapters.IS_CONNECTED;case i.CONNECTING:return NAF.adapters.CONNECTING;case i.NOT_CONNECTED:default:return NAF.adapters.NOT_CONNECTED}}},{key:"sendData",value:function(e,t,n){this.peers[e].send(t,n)}},{key:"sendDataGuaranteed",value:function(e,t,n){var o={from:this.myId,to:e,type:t,data:n,sending:!0};this.socket.emit("send",o)}},{key:"broadcastData",value:function(e,t){for(var n in this.peers)this.sendData(n,e,t)}},{key:"broadcastDataGuaranteed",value:function(e,t){var n={from:this.myId,type:e,data:t,broadcasting:!0};this.socket.emit("broadcast",n)}},{key:"storeAudioStream",value:function(e,t){this.audioStreams[e]=t,this.pendingAudioRequest[e]&&(NAF.log.write("Received pending audio for "+e),this.pendingAudioRequest[e](t),this.pendingAudioRequest[e](t))}},{key:"trackListener",value:function(e,t){this.storeAudioStream(e,t)}},{key:"getMediaStream",value:function(e){var t=this;return this.audioStreams[e]?(NAF.log.write("Already had audio for "+e),Promise.resolve(this.audioStreams[e])):(NAF.log.write("Waiting on audio for "+e),new Promise((function(n){t.pendingAudioRequest[e]=n})))}},{key:"updateTimeOffset",value:function(){var e=this,t=Date.now()+this.avgTimeOffset;return fetch(document.location.href,{method:"HEAD",cache:"no-cache"}).then((function(n){var o=new Date(n.headers.get("Date")).getTime()+500,i=Date.now(),r=o+(i-t)/2-i;e.serverTimeRequests++,10>=e.serverTimeRequests?e.timeOffsets.push(r):e.timeOffsets[e.serverTimeRequests%10]=r,e.avgTimeOffset=e.timeOffsets.reduce((function(e,t){return e+t}),0)/e.timeOffsets.length,10<e.serverTimeRequests?setTimeout((function(){return e.updateTimeOffset()}),3e5):e.updateTimeOffset()}))}},{key:"getServerTime",value:function(){return-1}}]),e}();NAF.adapters.register("native-webrtc",r),e.exports=r},function(e){"use strict";var t=function(){function e(e,t){for(var n,o=0;o<t.length;o++)(n=t[o]).enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}return function(t,n,o){return n&&e(t.prototype,n),o&&e(t,o),t}}(),n=function(){function e(t,n,o){(function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")})(this,e),this.localId=t,this.remoteId=n,this.sendSignalFunc=o,this.open=!1,this.channelLabel="networked-aframe-channel",this.pc=this.createPeerConnection(),this.channel=null}return t(e,[{key:"setDatachannelListeners",value:function(e,t,n,o){this.openListener=e,this.closedListener=t,this.messageListener=n,this.trackListener=o}},{key:"offer",value:function(e){var t=this;this.setupChannel(this.pc.createDataChannel(this.channelLabel,{reliable:!1})),e.sendAudio&&e.localAudioStream.getTracks().forEach((function(n){return t.pc.addTrack(n,e.localAudioStream)})),this.pc.createOffer((function(e){t.handleSessionDescription(e)}),(function(e){NAF.log.error("WebRtcPeer.offer: "+e)}),{offerToReceiveAudio:!0,offerToReceiveVideo:!1})}},{key:"handleSignal",value:function(e){if(this.localId===e.to&&this.remoteId===e.from)switch(e.type){case"offer":this.handleOffer(e);break;case"answer":this.handleAnswer(e);break;case"candidate":this.handleCandidate(e);break;default:NAF.log.error("WebRtcPeer.handleSignal: Unknown signal type "+e.type)}}},{key:"send",value:function(e,t){null===this.channel||"open"!==this.channel.readyState||this.channel.send(JSON.stringify({type:e,data:t}))}},{key:"getStatus",value:function(){if(null===this.channel)return e.NOT_CONNECTED;switch(this.channel.readyState){case"open":return e.IS_CONNECTED;case"connecting":return e.CONNECTING;case"closing":case"closed":default:return e.NOT_CONNECTED}}},{key:"createPeerConnection",value:function(){var t=this,n=window.RTCPeerConnection||window.webkitRTCPeerConnection||window.mozRTCPeerConnection||window.msRTCPeerConnection;if(void 0===n)throw new Error("WebRtcPeer.createPeerConnection: This browser does not seem to support WebRTC.");var o=new n({iceServers:e.ICE_SERVERS});return o.onicecandidate=function(e){e.candidate&&t.sendSignalFunc({from:t.localId,to:t.remoteId,type:"candidate",sdpMLineIndex:e.candidate.sdpMLineIndex,candidate:e.candidate.candidate})},o.oniceconnectionstatechange=function(){t.open&&"disconnected"===o.iceConnectionState&&(t.open=!1,t.closedListener(t.remoteId))},o.ontrack=function(e){t.trackListener(t.remoteId,e.streams[0])},o}},{key:"setupChannel",value:function(e){var t=this;this.channel=e,this.channel.onmessage=function(e){var n=JSON.parse(e.data);t.messageListener(t.remoteId,n.type,n.data)},this.channel.onopen=function(){t.open=!0,t.openListener(t.remoteId)},this.channel.onclose=function(){t.open&&(t.open=!1,t.closedListener(t.remoteId))},this.channel.onerror=function(e){NAF.log.error("WebRtcPeer.channel.onerror: "+e)}}},{key:"handleOffer",value:function(e){var t=this;this.pc.ondatachannel=function(e){t.setupChannel(e.channel)},this.setRemoteDescription(e),this.pc.createAnswer((function(e){t.handleSessionDescription(e)}),(function(e){NAF.log.error("WebRtcPeer.handleOffer: "+e)}))}},{key:"handleAnswer",value:function(e){this.setRemoteDescription(e)}},{key:"handleCandidate",value:function(e){var t=window.RTCIceCandidate||window.webkitRTCIceCandidate||window.mozRTCIceCandidate;this.pc.addIceCandidate(new t(e),(function(){}),(function(e){NAF.log.error("WebRtcPeer.handleCandidate: "+e)}))}},{key:"handleSessionDescription",value:function(e){this.pc.setLocalDescription(e,(function(){}),(function(e){NAF.log.error("WebRtcPeer.handleSessionDescription: "+e)})),this.sendSignalFunc({from:this.localId,to:this.remoteId,type:e.type,sdp:e.sdp})}},{key:"setRemoteDescription",value:function(e){var t=window.RTCSessionDescription||window.webkitRTCSessionDescription||window.mozRTCSessionDescription||window.msRTCSessionDescription;this.pc.setRemoteDescription(new t(e),(function(){}),(function(e){NAF.log.error("WebRtcPeer.setRemoteDescription: "+e)}))}},{key:"close",value:function(){this.pc&&this.pc.close()}}]),e}();n.IS_CONNECTED="IS_CONNECTED",n.CONNECTING="CONNECTING",n.NOT_CONNECTED="NOT_CONNECTED",n.ICE_SERVERS=[{urls:"stun:stun1.l.google.com:19302"},{urls:"stun:stun2.l.google.com:19302"},{urls:"stun:stun3.l.google.com:19302"},{urls:"stun:stun4.l.google.com:19302"}],e.exports=n}]);
//# sourceMappingURL=naf-native-webrtc-adapter.min.js.map