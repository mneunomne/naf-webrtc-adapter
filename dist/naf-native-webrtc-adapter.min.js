(function(a){function b(d){if(c[d])return c[d].exports;var e=c[d]={i:d,l:!1,exports:{}};return a[d].call(e.exports,e,e.exports,b),e.l=!0,e.exports}var c={};return b.m=a,b.c=c,b.d=function(a,c,d){b.o(a,c)||Object.defineProperty(a,c,{configurable:!1,enumerable:!0,get:d})},b.n=function(a){var c=a&&a.__esModule?function(){return a['default']}:function(){return a};return b.d(c,'a',c),c},b.o=function(a,b){return Object.prototype.hasOwnProperty.call(a,b)},b.p='',b(b.s=0)})([function(a,b,c){'use strict';function d(a,b){if(!(a instanceof b))throw new TypeError('Cannot call a class as a function')}var e=function(){function a(a,b){for(var c,d=0;d<b.length;d++)c=b[d],c.enumerable=c.enumerable||!1,c.configurable=!0,'value'in c&&(c.writable=!0),Object.defineProperty(a,c.key,c)}return function(b,c,d){return c&&a(b.prototype,c),d&&a(b,d),b}}(),f=c(1),g=function(){function a(){d(this,a),void 0===io&&console.warn('It looks like socket.io has not been loaded before NativeWebRtcAdapter. Please do that.'),this.app='default',this.room='default',this.connectedClients=[],this.occupantListener=null,this.peers={},this.occupants={}}return e(a,[{key:'setServerUrl',value:function(a){this.wsUrl=a}},{key:'setApp',value:function(a){this.app=a}},{key:'setRoom',value:function(a){this.room=a}},{key:'setWebRtcOptions',value:function(a){!1===a.datachannel&&console.warn('NativeWebRtcAdapter.setWebRtcOptions: datachannel must be true.'),!0===a.audio&&console.warn('NativeWebRtcAdapter does not support audio yet.'),!0===a.video&&console.warn('NativeWebRtcAdapter does not support video yet.')}},{key:'setServerConnectListeners',value:function(a,b){this.connectSuccess=a,this.connectFailure=b}},{key:'setRoomOccupantListener',value:function(a){this.occupantListener=a}},{key:'setDataChannelListeners',value:function(a,b,c){this.openListener=a,this.closedListener=b,this.messageListener=c}},{key:'connect',value:function(){function a(a){var b=a.from,d=a.type,e=a.data;console.log('received data',a),c.messageListener(b,d,e)}var b=this,c=this;this.wsUrl&&'/'!==this.wsUrl||('https:'===location.protocol?this.wsUrl='wss://'+location.host:this.wsUrl='ws://'+location.host),console.log('Attempting to connect to socket.io');var d=this.socket=io(this.wsUrl);d.on('connect',function(){console.log('User connected',d.id),c.joinRoom()}),d.on('connectSuccess',function(){console.log('Successfully joined room',b.room),c.connectSuccess(d.id)}),d.on('error',function(a){console.error('Socket connection failure',a),c.connectFailure()}),d.on('occupantsChanged',function(a){var b=a.occupants;console.log('occupants changed',a),c.receivedOccupants(b)}),d.on('send',a),d.on('broadcast',a)}},{key:'joinRoom',value:function(){console.log('Joining room',this.room),this.socket.emit('joinRoom',{room:this.room})}},{key:'receivedOccupants',value:function(a){delete a[NAF.clientId],this.occupantListener(a)}},{key:'shouldStartConnectionTo',value:function(){return!0}},{key:'startStreamConnection',value:function(a){this.connectedClients.push(a),this.openListener(a)}},{key:'closeStreamConnection',value:function(a){var b=this.connectedClients.indexOf(a);-1<b&&this.connectedClients.splice(b,1),this.closedListener(a)}},{key:'getConnectStatus',value:function(a){var b=-1!=this.connectedClients.indexOf(a);return b?NAF.adapters.IS_CONNECTED:NAF.adapters.NOT_CONNECTED}},{key:'sendData',value:function(a,b,c){this.sendDataGuaranteed(a,b,c)}},{key:'sendDataGuaranteed',value:function(a,b,c){var d={from:NAF.clientId,to:a,type:b,data:c,sending:!0};this.socket.emit('send',d)}},{key:'broadcastData',value:function(a,b){this.broadcastDataGuaranteed(a,b)}},{key:'broadcastDataGuaranteed',value:function(a,b){var c={from:NAF.clientId,type:a,data:b,broadcasting:!0};this.socket.emit('broadcast',c)}},{key:'getMediaStream',value:function(){return Promise.reject('Interface method not implemented: getMediaStream')}},{key:'getServerTime',value:function(){return-1}}]),a}();NAF.adapters.register('native-webrtc',g),a.exports=g},function(a){'use strict';function b(a,b){if(!(a instanceof b))throw new TypeError('Cannot call a class as a function')}var c=function(){function a(a,b){for(var c,d=0;d<b.length;d++)c=b[d],c.enumerable=c.enumerable||!1,c.configurable=!0,'value'in c&&(c.writable=!0),Object.defineProperty(a,c.key,c)}return function(b,c,d){return c&&a(b.prototype,c),d&&a(b,d),b}}(),d=function(){function a(c,d,e){b(this,a),this.localId=c,this.remoteId=d,this.sendSignalFunc=e,this.open=!1,this.channelLabel='networked-aframe-channel',this.pc=this.createPeerConnection(),this.channel=null}return c(a,[{key:'setDatachannelListeners',value:function(a,b,c){this.openListener=a,this.closedListener=b,this.messageListener=c}},{key:'offer',value:function(){var a=this;this.setupChannel(this.pc.createDataChannel(this.channelLabel,{reliable:!1})),this.pc.createOffer(function(b){a.handleSessionDescription(b)},function(a){console.error('WebRtcPeer.offer: '+a)})}},{key:'handleSignal',value:function(a){if(this.localId===a.to&&this.remoteId===a.from)switch(a.type){case'offer':this.handleOffer(a);break;case'answer':this.handleAnswer(a);break;case'candidate':this.handleCandidate(a);break;default:console.error('WebRtcPeer.handleSignal: Unknown signal type '+a.type);}}},{key:'send',value:function(a,b){null===this.channel||'open'!==this.channel.readyState||this.channel.send(JSON.stringify({type:a,data:b}))}},{key:'getStatus',value:function(){if(null===this.channel)return a.NOT_CONNECTED;switch(this.channel.readyState){case'open':return a.IS_CONNECTED;case'connecting':return a.CONNECTING;case'closing':case'closed':default:return a.NOT_CONNECTED;}}},{key:'createPeerConnection',value:function(){var b=this,c=window.RTCPeerConnection||window.webkitRTCPeerConnection||window.mozRTCPeerConnection||window.msRTCPeerConnection;if(void 0===c)throw new Error('WebRtcPeer.createPeerConnection: This browser does not seem to support WebRTC.');var d=new c({iceServers:a.ICE_SERVERS});return d.onicecandidate=function(a){a.candidate&&b.sendSignalFunc({from:b.localId,to:b.remoteId,type:'candidate',sdpMLineIndex:a.candidate.sdpMLineIndex,candidate:a.candidate.candidate})},d.oniceconnectionstatechange=function(){b.open&&'disconnected'===d.iceConnectionState&&(b.open=!1,b.closedListener(b.remoteId))},d}},{key:'setupChannel',value:function(a){var b=this;this.channel=a,this.channel.onmessage=function(a){var c=JSON.parse(a.data);b.messageListener(b.remoteId,c.type,c.data)},this.channel.onopen=function(){b.open=!0,b.openListener(b.remoteId)},this.channel.onclose=function(){b.open&&(b.open=!1,b.closedListener(b.remoteId))},this.channel.onerror=function(a){console.error('WebRtcPeer.channel.onerror: '+a)}}},{key:'handleOffer',value:function(a){var b=this;this.pc.ondatachannel=function(a){b.setupChannel(a.channel)},this.setRemoteDescription(a),this.pc.createAnswer(function(a){b.handleSessionDescription(a)},function(a){console.error('WebRtcPeer.handleOffer: '+a)})}},{key:'handleAnswer',value:function(a){this.setRemoteDescription(a)}},{key:'handleCandidate',value:function(a){var b=this,c=window.RTCIceCandidate||window.webkitRTCIceCandidate||window.mozRTCIceCandidate;this.pc.addIceCandidate(new c(a),function(){},function(a){console.error('WebRtcPeer.handleCandidate: '+a)})}},{key:'handleSessionDescription',value:function(a){this;this.pc.setLocalDescription(a,function(){},function(a){console.error('WebRtcPeer.handleSessionDescription: '+a)}),this.sendSignalFunc({from:this.localId,to:this.remoteId,type:a.type,sdp:a.sdp})}},{key:'setRemoteDescription',value:function(a){var b=this,c=window.RTCSessionDescription||window.webkitRTCSessionDescription||window.mozRTCSessionDescription||window.msRTCSessionDescription;this.pc.setRemoteDescription(new c(a),function(){},function(a){console.error('WebRtcPeer.setRemoteDescription: '+a)})}}]),a}();d.IS_CONNECTED='IS_CONNECTED',d.CONNECTING='CONNECTING',d.NOT_CONNECTED='NOT_CONNECTED',d.ICE_SERVERS=[{urls:'stun:stun1.l.google.com:19302'},{urls:'stun:stun2.l.google.com:19302'},{urls:'stun:stun3.l.google.com:19302'},{urls:'stun:stun4.l.google.com:19302'}],a.exports=d}]);
//# sourceMappingURL=naf-native-webrtc-adapter.min.js.map